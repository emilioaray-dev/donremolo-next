import { GetStaticPaths, GetStaticProps, InferGetStaticPropsType } from "next";
import { Key, ReactChild, ReactFragment, ReactPortal } from "react";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";

export const getStaticProps: GetStaticProps = async (context) => {
  

  // Res Lista Categoria (`http://${url}/api/dataCategorias`);
  const resCategorias = await fetch(
    `https://donremolo-next.vercel.app/api/dataCategorias`
  );
  // Lista Categoria to Json
  const ListCategory = await resCategorias.json();
type ListCategory = {
  id: number;
  categoria: string;
  urlImagen: string;
};

  return {
    props: {
      ListCategory,
    },
    revalidate: 10, // In 10 seconds
  };
};

function Category({ ListCategory }: InferGetStaticPropsType<typeof getStaticProps>) {
  const router = useRouter();
  return (
    <>
      <section className="container">
        <div className="containerCardCategories">
          {ListCategory.map(
            (lac: { id: number; categoria: string; urlImagen: string }) => {
              return (
                <div key={lac.id}>
                  <Link href={`/${lac.categoria}`}>
                    <a>
                      <div className="cardCategories">
                        <div className="effectTranslateY">
                          <div className="imgGrid">
                            <picture className="imgCategories">
                              <Image
                                src={`${lac.urlImagen}`}
                                alt="Imagen de Empanadas"
                                width={512}
                                height={384}
                                layout="responsive"
                                priority
                              />
                            </picture>
                          </div>
                          <h2 className="titleCategories">{lac.categoria}</h2>
                        </div>
                      </div>
                    </a>
                  </Link>
                </div>
              );
            }
          )}
        </div>
      </section>
      {/* Style of Component-----------------------------------*/}
      <style jsx>{`
        @media only screen and (min-width: 768px) {
          .containerCardCategories {
            grid-template-columns: auto auto auto auto !important;
          }
        }
        @media (max-width: 768px) and (orientation: landscape) {
          .containerCardCategories {
            grid-template-columns: auto auto auto auto !important;
          }
        }
        .container {
          position: absolute;
          width: 100vw;
          top: 50%;
          transform: translateY(-38%);
        }

        .containerCardCategories {
          display: grid;
          grid-template-columns: auto auto;
          justify-content: center;
        }

        .cardCategories {
          min-width: 8rem;
          max-width: 20rem;
          box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.15);
          border-radius: 0.625rem;
          margin: 2rem 1rem 1rem 1rem;
          background-color: var(--brandColorWhite);
          height: 7.2rem;
        }

        .effectTranslateY {
          display: grid;
          transform: translateY(-30%);
          justify-items: center;
        }

        .imgGrid {
          display: grid;
          min-height: 6rem;
          padding: 0rem 0.5rem;
          width: 100%;
        }

        .titleCategories {
          font-family: var(--Home-Card-fontFamily);
          font-size: 0.875rem;
        }
      `}</style>
    </>
  );
}
export default Category;
